@use '@angular/material' as mat;
@import './all-theme';

// Import the theme
@import 'packages/theme';

$stratos-dark-theme-supported: false !default;

// Themes - stratos-theme() function must be supplied by the theme
$stratos-themes: stratos-theme();

// stratos-theme() can return a single theme rather than a map of default and dark themes
@if not map-has-key($stratos-themes, 'default') {
  $tmp: $stratos-themes;
  $stratos-themes: (
    default: $tmp
  );
}

// Import any custom scss that the theme defines
// This import defines the mixin 'apply-theme'
@import 'packages/theme/extensions';

// Default theme ( = light theme)
$stratos-theme: map-get($stratos-themes, default);
$theme: map-get($stratos-theme, theme);

@if map-has-key($stratos-themes, 'dark') {
  $stratos-dark-theme-supported: true;
  $dark-stratos-theme: map-get($stratos-themes, dark);
  $dark-theme: map-get($dark-stratos-theme, theme);

  body.stratos {
    .dark-theme {
      @include mat.all-component-colors($dark-theme);
      @include app-theme($dark-stratos-theme);
      // Apply theme to extensions
      @include apply-theme($dark-stratos-theme);
    }
  }
}

.default {
  @include mat.all-component-themes($theme);
  @include app-theme($stratos-theme);
  // Apply theme to extensions
  @include apply-theme($stratos-theme);
}

// Import mat-core
// TODO(v15): As of v15 mat.legacy-core no longer includes default typography styles.
//  The following line adds:
//    1. Default typography styles for all components
//    2. Styles for typography hierarchy classes (e.g. .mat-headline-1)
//  If you specify typography styles for the components you use elsewhere, you should delete this line.
//  If you don't need the default component typographies but still want the hierarchy styles,
//  you can delete this line and instead use:
//    `@include mat.legacy-typography-hierarchy(mat.define-typography-config());`
@include mat.all-component-typographies;
@include mat.core();
